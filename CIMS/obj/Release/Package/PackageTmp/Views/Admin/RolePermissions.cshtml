@model CIMS.Models.Roles
@{
    ViewBag.Title = "RolePermissions";
    Layout = "~/Views/Shared/_InternalLayout.cshtml";
}
<link href="~/assets/cssmenu/styles.css" rel="stylesheet" />
<script src="~/assets/cssmenu/script.js"></script>

<link href="~/Content/Custom.css" rel="stylesheet" />

<link href="~/Content/css/evol-colorpicker.css" rel="stylesheet" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/jquery-ui.min.js" type="text/javascript"></script>
<script src="~/Content/js/evol-colorpicker.js"></script>

<div class="row bg-title">
    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
        <h4 class="page-title">User</h4>
    </div>
    <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
        <ol class="breadcrumb">
            <li><a href='@Url.Content("~/Home/Index")'>Home</a></li>
            <li class="active">User</li>
        </ol>
    </div>

</div>

<div id="msgDiv">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {

        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
</div>
<div class="row">
    <div class="col-md-12">
        <div class="col-md-5">
            <div class="white-box clearfix" style="min-height: 513px;">
                <div class="all-head1">
                    <div class="large-title left no-padding mtop-5">Roles List</div>


                    <div class="btn-right-align-right clearfix">


                        <a href='#myModal' data-toggle="modal" class="btn btn-primary " onclick="bindRole(0,'')"><i class="fa fa-plus"></i> Add Role</a>

                    </div>
                </div>


                @if (Model.RolesList != null && Model.RolesList.Count > 0)
                {

                    <div class="table-responsive">
                        <table id="employeeTable" class="table table-bordered Tableview">
                            <thead>
                                <tr>
                                    <th class="header headerSortDown">Role Name</th>
                                    <th class="header">
                                        Action
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.RolesList)
                                {
                                    <tr id="@(item.RoleId)tr">
                                        <td>
                                            <a href="/Admin/RolePermissions?id=@item.RoleId" id="@(item.RoleId)act">
                                                @item.RoleName
                                            </a>
                                        </td>
                                        <td>
                                            <a href='#myModal' data-toggle="modal" class="btn small btn-info btn-sm btn-icon edit" title="Edit Role" onclick="bindRole('@item.RoleId','@item.RoleName')"><i class="fa fa-pencil"></i></a>
                                            <a class="btn btn-danger small btn-sm delete-sm" href='javascript:;' onclick='DeleteRole(@item.RoleId,this);' title="Delete Role"><i class='fa fa-trash'></i></a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }

            </div>
            <div class="white-box clearfix">
                @using (Html.BeginForm("FileUpload", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {


                    <label for="file">Corporate Logo:</label>

                    <input type="file" name="file" id="file" style="width: 100%;float:left" />
                    <b>
                        <img src="" class="CIMS" id="logo2" />
                    </b>
                    <input type="submit" id="upload" value="Upload" class="submit btn btn-primary" style="float:right" />

                }
                <hr />
                <br />

                <script type="text/javascript">
                    function ShowHideDiv() {
                        var chkYes = document.getElementById("chkYes");
                        var dvPassport = document.getElementById("palette");

                        dvPassport.style.display = chkYes.checked ? "block" : "none";

                        var dvImage = document.getElementById("Image");
                        dvImage.style.display = chkYes.checked ? "none" : "block";

                    }
                </script>
                @using (Html.BeginForm("editbackground", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {

                    <hr />
                    <label for="file">Background :</label>

                    <label for="chkYes">

                        <input type="radio" id="chkYes" value="1" name="chkPassPort" onclick="ShowHideDiv()" checked="checked" />
                        palette
                    </label>
                    <label for="chkNo">

                        <input type="radio" id="chkNo" value="2" name="chkPassPort" onclick="ShowHideDiv()" />
                        Upload Image
                    </label>

                    <div id="palette">
                        <div class="demoPanel">
                            <input id="transColor" value="#0000ffff" name="palette" /><br />
                        </div>
                    </div>
                    <div id="Image" style="display: none">

                        <input type="file" name="file" id="file" style="width: 100%;float:left" />

                        <b>
                            <img src="" class="CIMS" id="logo1" width="100" height="100" />
                        </b>

                    </div>

                    <input type="submit" value="Set" class="submit btn btn-primary" style="float:right" />

                }
            </div>
        </div>
        <div class="col-md-7">
            @using (Html.BeginForm("SavepPermission", "Admin", null, FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "off" }))
            {
                <div class="white-box clearfix">
                    <div class="all-head1">
                        <div class="large-title left no-padding mtop-5">
                            Manage Permission :
                            <span style="text-transform: uppercase; color: #8BAF0F" id="RoleNameShow">@ViewBag.RoleName</span>

                        </div>

                        <div class="btn-right-align-right clearfix">
                            @if (ViewBag.RoleID > 0)
                            {
                                <button type="submit" class="btn btn-primary" id="savepermission">Save</button>
                            }

                        </div>
                    </div>


                    @Html.HiddenFor(m => m.RoleId)
                    <div id='cssmenu'>
                        <ul id="div1" ng-model="div">


                            @for (int parent = 0; parent < Model.MenusList.Where(m => m.ParentId == 0).ToList().Count; parent++)
                            {

                                <li class='has-sub' data-id="0">

                                    <a href="javascript:;">
                                        <span class="title1">@Model.MenusList[parent].MenuName</span>
                                    </a>

                                    <ul id="CheckAll@(Model.MenusList[parent].Id)">
                                        <li class='has-sub' data-id="@Model.MenusList[parent].Id">
                                            @Html.HiddenFor(m => m.MenusList[parent].Id)
                                            <input type="checkbox" class="mainCheck" id="ckbCheckAll@(Model.MenusList[parent].Id)" name="@Model.MenusList[parent].Id" @(Model.MenusList[parent].PermissionType > 0 ? "checked='checked'" : "") />
                                            Allow @Model.MenusList[parent].MenuName

                                            <div style="float: right">
                                                @Html.HiddenFor(m => m.MenusList[parent].PermissionType, new { @class = "permissionType" })

                                                <input type="checkbox" value="1" name="@(Model.MenusList[parent].Id)control" class="full" /> Create
                                                <input type="checkbox" value="2" name="@(Model.MenusList[parent].Id)control" class="full" /> View
                                                <input type="checkbox" value="4" name="@(Model.MenusList[parent].Id)control" class="full" /> Update
                                                <input type="checkbox" value="8" name="@(Model.MenusList[parent].Id)control" class="full" /> Delete
                                            </div>
                                        </li>
                                        @if (Model.MenusList.Where(m => m.ParentId == Model.MenusList[parent].Id).ToList().Count > 0)
                                        {
                                            var childList = Model.MenusList.Where(m => m.ParentId == Model.MenusList[parent].Id).ToList();
                                            for (int i = 0; i < childList.Count; i++)
                                            {
                                                <li class='has-sub' data-id="@childList[i].Id">
                                                    <input data-val="true" data-val-number="The field Id must be a number." data-val-required="The Id field is required." id="MenusList_@(childList[i].Row-1)__Id" name="MenusList[@(childList[i].Row-1)].Id" value="@childList[i].Id" type="hidden">

                                                    <input type="checkbox" class="mainCheck" name="@childList[i].Id" @(childList[i].PermissionType > 0 ? "checked='checked'" : "") />
                                                    Allow @childList[i].MenuName

                                                    <div style="float: right">
                                                        <input class="permissionType" data-val="true" data-val-number="The field PermissionType must be a number." data-val-required="The PermissionType field is required." id="MenusList_@(childList[i].Row-1)__PermissionType" name="MenusList[@(childList[i].Row-1)].PermissionType" value="@childList[i].PermissionType" type="hidden">

                                                        <input type="checkbox" value="1" name="@(childList[i].Id)control" class="full" style="display:none" />
                                                        <input type="checkbox" value="2" name="@(childList[i].Id)control" class="full" style="display:none" />
                                                        <input type="checkbox" value="4" name="@(childList[i].Id)control" class="full" style="display:none" />
                                                        <input type="checkbox" value="8" name="@(childList[i].Id)control" class="full" style="display:none" />
                                                    </div>
                                                </li>
                                            }
                                        }


                                    </ul>
                                </li>
                            }
                        </ul>
                    </div>
                </div>
            }

            @*AB New*@
            <div class="white-box clearfix">
                @using (Html.BeginForm("FileUploadCustomer", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {


                    <label for="file">Customer Logo:</label>

                    <input type="file" name="file" id="file" style="width: 100%;float:left" onchange="loadFile(event)" />
                    <b>
                        <img src="" class="CIMS" id="logoCustomer2" height="50" width="140" style="margin-bottom:5px;" />
                    </b>
                    <input type="submit" id="upload" value="Upload" class="submit btn btn-primary" style="float:right" />

                }
            </div>
        </div>
    </div>

    @using (Html.BeginForm("UserRoles", "Admin", null, FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "off" }))
    {
        <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"><label id="SaveType"></label> <label>Role</label></h4>
                    </div>
                    <div class="modal-body row">
                        <div class="col-md-12">
                            <div class="form-group">
                                @Html.HiddenFor(m => m.RoleId, new { @Id = "RoleId_Permission" })
                                @Html.LabelFor(m => m.RoleName)
                                @Html.TextBoxFor(m => m.RoleName, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.RoleName)
                            </div>
                            <div class="form-group">
                                <div class="pull-right">
                                    <input class="btn btn-primary" type="submit" value="Save" id="saveRole" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <script>


        $(function () {
            $("#upload").bind("click", function () {
                //Get reference of FileUpload.
                var fileUpload = $("#fileUpload")[0];

                //Check whether the file is valid Image.
                var regex = new RegExp("([a-zA-Z0-9\s_\\.\-:])+(.jpg|.png|.gif)$");
                if (regex.test(fileUpload.value.toLowerCase())) {
                    //Check whether HTML5 is supported.
                    if (typeof (fileUpload.files) != "undefined") {
                        //Initiate the FileReader object.
                        var reader = new FileReader();
                        //Read the contents of Image File.
                        reader.readAsDataURL(fileUpload.files[0]);
                        reader.onload = function (e) {
                            //Initiate the JavaScript Image object.
                            var image = new Image();
                            //Set the Base64 string return from FileReader as source.
                            image.src = e.target.result;
                            image.onload = function () {
                                //Determine the Height and Width.
                                var height = this.height;
                                var width = this.width;
                                if (height > 100 || width > 100) {
                                    alert("Height and Width must not exceed 100px.");
                                    return false;
                                }
                                alert("Uploaded image has valid Height and Width.");
                                return true;
                            };
                        }
                    } else {
                        alert("This browser does not support HTML5.");
                        return false;
                    }
                } else {
                    alert("Please select a valid Image file.");
                    return false;
                }
            });
        });



        function bindRole(Id, RoleName) {
            $('#RoleId_Permission').val(Id);
            $('#RoleName').val(RoleName);
            if (Id > 0) {
                $('#SaveType').html('Edit');
                $('#saveRole').val('Update');
            }
            else {
                $('#SaveType').html('Add New');
                $('#saveRole').val('Save');
            }
        }
        function DeleteRole(id, caller) {
            var x = DeleteConfirm('@ViewBag.Action');
            if (x) {
                $.ajax({
                    url: '@Url.Content("~/Admin/DeleteRole")',
                    data: JSON.stringify({ 'Id': id }),
                    type: 'POST',
                    dataType: 'json',
                    contentType: 'application/json',
                    success: function (data) {
                        if (data == "success") {
                            if ($('#employeeTable>tbody tr').length == 1) {
                                $('#employeeTable').remove();
                                $('#msgDiv').html('<div class="alert alert-success">Role has been deleted Suceesfully.</div>');
                                window.scrollTo(0, 0);
                            }
                            else {
                                $(caller).parents('tr:first').remove();
                                $('#msgDiv').html('<div class="alert alert-success">Role has been deleted Suceesfully.</div>');
                                window.scrollTo(0, 0);
                            }
                        } else if (data == "-10") {
                            $('#msgDiv').html('Error in deleting role. Role is assigned to a user.');
                        }
                        else {
                            $('#msgDiv').html('Error in deleting role.');
                        }

                    }
                });
            }
        }
    </script>
    <script type="text/javascript">

        $().ready(function () {
            var newRoleID = '@(Model.RoleId)';
            $('#' + newRoleID + 'tr').addClass('trselc');

            if ('@ViewBag.RoleID' != '') {
                $('#@(Model.RoleId)act').addClass('font-bold');
            }
            else {
                $('#@(Model.RoleId)act').removeClass('font-bold');
            }

            $("#ckbCheckAll1").on('change', function () {
                if ($(this).is(":checked")) {
                    $("#CheckAll1").find('.mainCheck').each(function () {
                        $(this).prop('checked', true);
                        $(this).next().find('input[value=2]').prop('checked', true);
                    });
                }
                else {
                    $("#CheckAll1").find('.mainCheck').each(function () {
                        $(this).prop('checked', false);
                        $(this).next().find('input[value=2]').prop('checked', true);
                    });
                }
            });
            $("#ckbCheckAll2").on('change', function () {
                if ($(this).is(":checked")) {
                    $("#CheckAll2").find('.mainCheck').each(function () {
                        $(this).prop('checked', true);
                        $(this).next().find('input[value=2]').prop('checked', true);
                    });
                }
                else {
                    $("#CheckAll2").find('.mainCheck').each(function () {
                        $(this).prop('checked', false);
                        $(this).next().find('input[value=2]').prop('checked', true);
                    });
                }
            });


            $('input[type=checkbox]').on('change', function () {
                if ($(this).is(":checked")) {

                    $(this).next().find('input[value=2]').prop('checked', true);
                }
                else {

                    $(this).next().find('input[type = checkbox]').prop('checked', false);
                }
            });



            $.ajax({
                url: '@Url.Content("~/Admin/GetPermission")',
                data: JSON.stringify({ 'Id': '@Model.RoleId' }),
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    $(data.MenusList).each(function (i, item) {
                        var permissionType = item.PermissionType;
                        switch (parseInt(permissionType)) {
                            case 1: $('.has-sub[data-id=' + item.Id + ']').find('input[value = 1]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 2: $('.has-sub[data-id=' + item.Id + ']').find('input[value = 2]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 3:
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 1]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 2]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 4:

                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 4]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 5: $('.has-sub[data-id=' + item.Id + ']').find('input[value = 1]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 4]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 6: $('.has-sub[data-id=' + item.Id + ']').find('input[value = 2]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 4]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 7:
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 1]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 2]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 4]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 8:
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 8]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 9:
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 1]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 8]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 10:
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 2]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 8]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 11:
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 1]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 2]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 8]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                break;
                            case 12:
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 4]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 8]').prop('checked', true);
                                break;
                            case 13:
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 1]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 4]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 8]').prop('checked', true);
                                break;
                            case 14:
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 2]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 4]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 8]').prop('checked', true);
                                break;
                            case 15:
                                $('.has-sub[data-id=' + item.Id + ']').find('.mainCheck').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 1]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 2]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 4]').prop('checked', true);
                                $('.has-sub[data-id=' + item.Id + ']').find('input[value = 8]').prop('checked', true);
                                break;

                        }
                    });
                }
            });

            $('#savepermission').click(function () {
                $('li').each(function () {
                    var permissionType = 0;
                    var subPermissionType = 0;
                    $(this).find('input[class=full]:checked').each(function () {
                        permissionType += parseInt($(this).val());
                    });
                    $(this).find('.permissionType').val(permissionType);
                });
            });

            $('input[class=full]').change(function () {
                if ($(this).parent().find('input[type=checkbox]:checked').length == 0) {
                    $(this).parents('li').find('input[type = checkbox]').eq(0).prop('checked', false);
                }
                else {
                    $(this).parents('li').find('input[type = checkbox]').eq(0).prop('checked', true);
                }
            });
        });

    </script>

    <script>

        $(document).ready(function () {

            // Change theme
            $('.css').on('click', function (evt) {
                $('#jquiCSS').attr('href', 'http://ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/themes/' + this.innerHTML + '/jquery-ui.css');
                $('.css').removeClass('sel');
                $(this).addClass('sel');
            });



            // With transparent color
            $('#transColor').colorpicker({
                transparentColor: true
            });

            // With hidden button
            $('#hideButton').colorpicker({
                hideButton: true
            });

            // No color indicator
            $('#noIndColor').colorpicker({
                displayIndicator: false
            });

            // French colorpicker
            $('#frenchColor').colorpicker({
                strings: "Couleurs de themes,Couleurs de base,Plus de couleurs,Moins de couleurs,Palette,Historique,Pas encore d'historique."
            });

            // Events demo
            $('#getVal2').on('click', function () {
                alert('Selected color = "' + $('#cpInline').colorpicker("val") + '"');
            });
            $('#setVal2').on('click', function () {
                $('#cpInline').colorpicker("val", '#31859b');
            });
            $('#enable2').on('click', function () {
                $('#cpInline').colorpicker("enable");
            });
            $('#disable2').on('click', function () {
                $('#cpInline').colorpicker("disable");
            });
            $('#destroy2').on('click', function () {
                $('#cpInline').colorpicker("destroy");
            });

            // Fix links
            $('a[href="#"]').attr('href', 'javascript:void(0)');

        });

    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $('#employeeTable').DataTable();
        });
    </script>

    <style>
        .alphabet_group {
            display: none;
        }
    </style>


    <script src="~/Content/data-tables/jquery.dataTables.min.js"></script>
    <script language="JavaScript">


        function setlogo() {

            var logoValue = '@(ViewBag.Corporate_logo)';

            $('#logo').attr("src", "/assets/images/" + logoValue);
            $('#logo2').attr("src", "/assets/images/" + logoValue);

            logoValue = '@(ViewBag.Customer_logo)';

            $('#logoCustomer2').attr("src", "/assets/images/" + logoValue);
        }

        function setback() {

            var backValue = '@(ViewBag.Corporate_background)';
            var back_type = '@(ViewBag.Corporate_back_type)';


            var chkYes = document.getElementById("chkYes");

            var dvPassport = document.getElementById("palette");

            var dvImage = document.getElementById("Image");



            if (back_type == "palette") {

                $('#transColor').val(backValue);

                $("#chkYes").prop("checked", true);
                $("#chkNo").prop("checked", false);

                dvImage.style.display = "none";
                dvPassport.style.display = "block";

                $('.evo-colorind').attr("style", "background-color:" + backValue);



            } else {

                $('#logo1').attr("src", "/assets/images/" + backValue);

                $("#chkYes").prop("checked", false);
                $("#chkNo").prop("checked", true);

                dvImage.style.display = "block";
                dvPassport.style.display = "none";

            }

        }

        setlogo();
        setback();



    </script>

