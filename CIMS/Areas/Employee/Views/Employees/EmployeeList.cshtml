@model CIMS.Models.EmployeeModel
@{
    ViewBag.Title = "EmployeeList";
    Layout = "~/Views/Shared/_InternalLayout.cshtml";


}

<link href="~/Content/crop-avatar/css/cropper.css" rel="stylesheet" />
<link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-1.10.2.js"></script>
<script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>
<script src="~/Content/crop-avatar/js/cropper.js"></script>
<link href="~/Content/Custom.css" rel="stylesheet" />

<style>
    .cmbEmp {
        pointer-events: none;
        opacity: 0.40;
    }

    .dataTables_filter {
        display: none;
    }

    .alphabet {
        display: none !important;
    }
</style>



<div class="row bg-title">
    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
        <h4 class="page-title">Employees</h4>
    </div>
    <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
        <ol class="breadcrumb">
            <li><a href='@Url.Content("~/Home/Index")'>Home</a></li>
            <li class="active">Employees</li>
        </ol>
    </div>

</div>

@*Ab*@
<div class="tab-pane active" id="Details">

    <div class="large-title">Employees Search </div>


    @using (Html.BeginForm("EmployeesSearch", "Employees", FormMethod.Post, new { enctype = "multipart/form-data", autocomplete = "off" }))
    {
        <div class="col-md-6">
            <div class="white-box">
                <div class="form-group">
                    <label class="control-label">System Generated Employee Number</label>
                    @Html.TextBoxFor(m => m.EmpNumber, null, new { @class = "form-control" })

                </div>


                <div class="form-group">
                    <label class="control-label">Employee Number</label>
                    @Html.TextBoxFor(m => m.EmployeeNumber, null, new { @class = "form-control", @maxlength = "25" })
                </div>

                <div class="form-group">
                    <label class="control-label">First Name </label>

                    @Html.TextBoxFor(m => m.FirstName, null, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })*@
                </div>

                <div class="form-group">
                    <label class="control-label">Middle Name</label>

                    @Html.TextBoxFor(m => m.MiddleName, null, new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label class="control-label">Last Name</label>

                    @Html.TextBoxFor(m => m.LastName, null, new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })*@
                </div>

                <div class="form-group">
                    <label class="control-label">Sex</label>
                    @Html.DropDownListFor(model => model.Sex, ViewBag.GenderList as List<SelectListItem>, "Unknown", new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label class="control-label">Race </label>
                    @Html.DropDownListFor(model => model.Race, ViewBag.RaceList as List<SelectListItem>, "Unknown", new { @class = "form-control" })

                </div>
                <div class="form-group">
                    <label class="control-label">Complexion</label>
                    @Html.DropDownListFor(model => model.Complexion, ViewBag.ComplexionList as List<SelectListItem>, "Unknown", new { @class = "form-control" })

                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="white-box" style="min-height:665px;">

                <div class="form-group">
                    <label class="control-label">Height</label>
                    <div class="input-group">
                        <span class="input-group-addon">@ViewBag.ActiveMetricsHeight</span>
                        @*<span class="input-group-addon">@ViewBag.ActiveDefaultHeight</span>*@
                        @Html.TextBoxFor(m => m.Height, null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label">Weight</label>
                    <div class="input-group">
                        <span class="input-group-addon">@ViewBag.ActiveMetricsWeight</span>
                        @*<span class="input-group-addon">@ViewBag.ActiveDefaultWeight</span>*@
                        @Html.TextBoxFor(m => m.Weight, null, new { @class = "form-control", @maxlength = "3" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label">Eyes</label>
                    @Html.DropDownListFor(model => model.Eyes, ViewBag.EyesStyleList as List<SelectListItem>, "Unknown", new { @class = "form-control" })

                </div>

                <div class="form-group">
                    <label class="control-label">Build</label>
                    @Html.DropDownListFor(model => model.Build, ViewBag.BuildList as List<SelectListItem>, "Unknown", new { @class = "form-control" })

                </div>


                <div class="form-group">
                    <label class="control-label">Glasses</label>
                    @Html.DropDownListFor(model => model.Glasses, ViewBag.GlassesList as List<SelectListItem>, "Unknown", new { @class = "form-control" })
                </div>

                <div class="form-group">
                    <label class="control-label">Position</label>
                    @Html.DropDownListFor(model => model.StaffPosition, ViewBag.EmployeePosition as List<SelectListItem>, "Unknown", new { @class = "form-control" })
                </div>

                <div class="form-group">
                    @*<label class="control-label">Employee Status</label>
                    @Html.DropDownListFor(m => m.EmployeeStatusID, ViewBag.EmployeeStatusList as List<SelectListItem>, "Unknown", new { @class = "form-control" })*@
                    <label class="control-label">Employee Status</label>
                    @Html.DropDownListFor(model => model.EmployeeStatusID, ViewBag.EmployeeStatusList as List<SelectListItem>, "Unknown", new { @class = "form-control" })
                </div>
            </div>
        </div>

                    <div class="col-md-12">
                        <div class="white-box clearfix">
                            <div class="col-md-12">
                                <button type="submit" class="btn btn-success" value="employeelist" name="searchtype">Search</button>
                                @*<button type="reset" class="btn btn-white">Reset</button>*@
                                <a href="@Url.Action("EmployeeList","Employees")" class="btn btn-danger">Reset</a>
                            </div>
                        </div>
                    </div>
    }
</div>

<div class="panel panel-default">
    <div class="panel-heading clearfix custom-head">
        <h3 class="box-title m-b-0">Employee List</h3>
        @* <h3 class="panel-title">Employee List</h3>*@

        <div class="panel-options">
            <div class="right-btn">
                @*<a href="javascript:;" id="mediaBtn" class="btn btn-info ToggleCls"> Media </a>
                    <a href="javascript:;" id="combineBtn" class="btn btn-info ToggleCls"> Combine Employee</a>*@
                <a href='@Url.Content("~/Employee/Employees/EmployeesSearch")' class="btn btn-success"><i class="fa fa-search" aria-hidden="true"></i> Search</a>
                @*<a href='@Url.Content("~/Employee/Employees/Employees")' class="btn btn-primary add"><i class="fa fa-plus"></i> Add Employee</a>*@
                <button type="button" class="btn btn btn-primary  add" id="AddEmployeeFromSearch" title="Add Employee">
                    <i class="fa fa-plus"></i>Add Employee
                </button>
            </div>
        </div>
    </div>

    <div class="panel-body">
        <div class="table-responsive col-md-12">

            <table id="employeeTable" class="table table-bordered dataTable no-footer Tableview ">
                <thead>
                    <tr>
                        <th class="header">
                            Media
                        </th>
                        <th class="header">
                            Employee
                        </th>

                        <th class="header">
                            First Name
                        </th>
                        <th class="header">
                            Last Name
                        </th>
                        <th class="header headerSortDown">
                            Created Date
                        </th>
                        @*<th>
                                Age
                            </th>*@
                        @*<th>
                                Action
                            </th>*@

                        @*<th>
                                Media
                            </th>*@
                        @*<th>
                                Reports
                            </th>
                            <th>
                                Combine
                            </th>*@
                        @*<th>
                                Convert to Subject
                            </th>*@
                        @*"/Employee/Employees/SearchEmployee/" + employeeID;*@
                    </tr>
                </thead>

                @if (Model.EmployeeList.Count() > 0)
                {
                    foreach (var items in Model.EmployeeList)
                    {

                        <tr class="empTR" data-id="@items.EmployeeID" style="cursor:pointer">


                            @if (ViewBag.Action == 4 || ViewBag.Action == 5 || ViewBag.Action == 6 || ViewBag.Action == 7 || ViewBag.Action == 12 || ViewBag.Action == 13 || ViewBag.Action == 14 || ViewBag.Action == 15)
                            {
                                <td style="width: 100px;">
                                    <a href='@Url.Content("~/Employee/Employees/Employees?Type=Employee&Id="+items.EmployeeID+"")' title="View Employee">
                                        <img style="width: 100px;" src="@(!String.IsNullOrEmpty(items.FilePath) ? items.FilePath: Url.Content("~/asset/plugins/images/no-image.jpg"))" />
                                    </a>
                                </td>
                                <td onclick="document.location.href='@Url.Content("~/Employee/Employees/Employees?Type=Employee&Id="+items.EmployeeID+"")'">@items.EmpNumber</td>
                                <td onclick="document.location.href='@Url.Content("~/Employee/Employees/Employees?Type=Employee&Id="+items.EmployeeID+"")'">@items.FirstName</td>
                                <td onclick="document.location.href='@Url.Content("~/Employee/Employees/Employees?Type=Employee&Id="+items.EmployeeID+"")'">@items.LastName</td>
                                <td onclick="document.location.href='@Url.Content("~/Employee/Employees/Employees?Type=Employee&Id="+items.EmployeeID+"")'">@items.CreatedDate</td>
                            }
                            else
                            {
                                <td style="width: 100px;">
                                    <a href='@Url.Content("~/Employee/Employees/Employees?Show=View&Type=Employee&Id="+items.EmployeeID+"")' title="View Employee">
                                        <img style="width: 100px;" src="@(!String.IsNullOrEmpty(items.FilePath) ? items.FilePath: Url.Content("~/asset/plugins/images/no-image.jpg"))" />
                                    </a>
                                </td>
                                <td onclick="document.location.href='@Url.Content("~/Employee/Employees/Employees?Show=View&Type=Employee&Id="+items.EmployeeID+"")'">@items.EmpNumber</td>
                                <td onclick="document.location.href='@Url.Content("~/Employee/Employees/Employees?Show=View&Type=Employee&Id="+items.EmployeeID+"")'">@items.FirstName</td>
                                <td onclick="document.location.href='@Url.Content("~/Employee/Employees/Employees?Show=View&Type=Employee&Id="+items.EmployeeID+"")'">@items.LastName</td>
                                <td onclick="document.location.href='@Url.Content("~/Employee/Employees/Employees?Show=View&Type=Employee&Id="+items.EmployeeID+"")'">@items.CreatedDate</td>

                            }


                            @*<td>@items.Age</td>*@
                            @*<td>
                                    <a href='@Url.Content("~/Employee/Employees/Employees?Id="+items.EmployeeID+"")' class="btn btn-info small btn-sm btn-icon " title="Edit Employee"><i class="fa fa-pencil"></i></a>
                                    <a class="btn btn-danger small  btn-sm delete-sm" href='javascript:;' onclick='DeleteEmployee(@items.EmployeeID,this);' title="Delete Employee"><i class='fa fa-trash'></i></a>

                                </td>*@

                            @*<td>
                                    <a href='@Url.Content("~/Media/Media/Index?Type=Employee&typeid=" + items.EmployeeID + "")' class="btn btn-info small btn-sm btn-icon" title="Media"><i class="fa fa-camera"></i></a>
                                </td>*@
                            @*<td>
                                    <a class="btn btn-info small  btn-sm btn-icon" href='@Url.Content("~/Employee/Employees/EmployeeIncidentList?EmpId=" + items.EmployeeID + "")' onclick="return checkReportPermission(this)" data-permission="@((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Employee Incident Details", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Employees")))">
                                        View Reports
                                    </a>
                                </td>
                                <td>
                                    <a class="btn btn-info small  btn-sm btn-icon" href='@Url.Content("~/Employee/Employees/SearchEmployee/" + items.EmployeeID + "")'>
                                        Combine Employee
                                    </a>
                                </td>*@
                            @*<td>
                                    @if (items.ConvertSubject == true)
                                    {
                                        <a class="btn btn-success small  btn-sm btn-icon" href='' title="Already Convert">
                                            Already Convert
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-info small  btn-sm btn-icon add" href='javascript:;' onclick='ConvertToSubjct(@items.EmployeeID,this);' title="Convert to Subject">
                                            Convert
                                        </a>
                                    }
                                </td>*@
                        </tr>
                    }
                }

            </table>

        </div>
    </div>

</div>
<script src="~/Content/data-tables/jquery.dataTables.min.js"></script>

<link href="~/Content/data-tables/dataTables.alphabetSearch.css" rel="stylesheet" />
<script src="~/Content/data-tables/dataTables.alphabetSearch.min.js"></script>

@*alphabetSearch: {
               column: 3
           },
    language: {
               search: "First Name:",
               searchPlaceholder: "First Name"
           }
*@

<script src="~/Content/Custom.js"></script>
<script src="~/assets/js/jquery.maskedinput.min.js"></script>
<script>



    $(document).ready(function () {
        if (('@ViewBag.ActiveMetricsHeight').indexOf("inch") > 0 || ('@ViewBag.ActiveMetricsHeight').indexOf("Inch") > 0) {
            $("#Height").mask("9'99''");
        }
        var table = $('#employeeTable').DataTable({
            dom: 'Alfrtip'
        });

        //table.columns(2).every(function () {
        //    var that = this;

        //    $('input', this.footer()).on('keyup change', function () {
        //        if (that.search() !== this.value) {
        //            that
        //                .search('^' + this.value, true, false)
        //                .draw();
        //        }
        //    });
        //});

        $(document).on('click', '.empty', function () { $('#employeeTable>tbody tr.alphabet_group').remove(); });
        $(document).on('click', '.data', function () { $('#employeeTable>tbody tr.alphabet_group').remove(); });
        $(document).on('click', '.active', function () { $('#employeeTable>tbody tr.alphabet_group').remove(); });
        $('.ToggleCls').addClass('cmbEmp');
        $('.empTR').on('click', function () {

            var employeeID = $(this).attr('data-id');
            //var url = "/Employee/Employees/SearchEmployee/" + employeeID;
            var url = "/Employee/Employees/SearchEmployee/" + employeeID;
            // var mediaUrl = "/CIMS/Media/Media/Index?Type=Employee&id=" + employeeID;
            // $('#mediaBtn').attr('href', mediaUrl);
            $('#combineBtn').attr('href', url);
            $('.ToggleCls').removeClass('cmbEmp');
        });
        var employeeID = '';
        $("#FirstName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Employees/FirstNameList",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            employeeID = item.EmployeeID;
                            return { label: item.FirstName, value: item.FirstName };
                        }))
                    }
                });
            },
            messages: {
                noResults: "",
                results: function (resultsCount) { }
            }
            ,
            select: function (event, ui) {
                //event.preventDefault();
                //var str = ui.item.value.match(/[^ ]+/g);
                //$('#FirstName').val(str[0]);
                //firstname = str[0];
                //if (str.length > 1) {
                //    $('#LastName').val(str[1]);
                //}
                //return
                var actionurl = '@Url.Action("Employees", "Employees")';
                //e.preventDefault();
                window.location = actionurl + '?Type=Employee' +
                    '&Id=' + employeeID;
            }
            //,
            //select: function (event, ui) {
            //    $.ajax({
            //        url: "/Employees/SelectionList",
            //        type: "POST",
            //        dataType: "json",
            //        data: { Prefix: ui.item.value },
            //        success: function (data) {
            //            var partdata = data.split("/");

            //            $('#EmpNumber').val(partdata[3]);
            //            $('#FirstName').val(partdata[0]);
            //            $('#LastName').val(partdata[1]);
            //            $('#MiddleName').val(partdata[2]);

            //            var sex1 = partdata[4];

            //            $('#Sex option').each(function () {
            //                debugger;
            //                if ($(this).text().toLowerCase() == sex1.toLowerCase()) {
            //                    this.selected = true;
            //                    return;
            //                }
            //            });

            //        }
            //    });

            //}
        });


        //Ankur
        $("#LastName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Employees/LastNameList",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term, "FirstNameGet": $("#FirstName").val() },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.LastName, value: item.LastName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "",
                results: function (resultsCount) { }
            }
        });

    });
    $(document).on('keyup', '#employeeTable_filter input[type=search]', function () {
        $(document).find('.alphabet-clear').click();
    });

    function ConvertToSubjct(ConvertEmployeeID, caller) {
        $.ajax({
            url: '@Url.Content("~/Employee/Employees/ConvertEmployeeToSubject")',
            data: JSON.stringify({ 'EmpId': ConvertEmployeeID }),
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            success: function (data) {
                if (data == "success") {
                    alert("Successfully created new subject record.");
                    location.reload();
                }
                else {
                    alert("Reports not Successfully Saved.");
                }
            },
            error: function (error) {
                console.log(error);
            },
            failure: function (response) {
                console.log(response);
            },
        });
    }

    $('#AddEmployeeFromSearch').click(function (e) {
        var actionurl = '@Url.Action("AddEmployeeFromSearch", "Employees")';
        e.preventDefault();
        window.location = actionurl
            + '?FirstName=' + encodeURIComponent($('#FirstName').val()) +
            '&MiddleName=' + encodeURIComponent($('#MiddleName').val()) +
            '&LastName=' + encodeURIComponent($('#LastName').val()) +
            '&EmployeeNumber=' + encodeURIComponent($('#EmployeeNumber').val()) +
            '&Sex=' + encodeURIComponent($('#Sex').val()) +
            '&Race=' + encodeURIComponent($('#Race').val()) +
            '&Complexion=' + encodeURIComponent($('#Complexion').val()) +
            '&Eyes=' + encodeURIComponent($('#Eyes').val()) +
            '&Build=' + encodeURIComponent($('#Build').val()) +
            '&Glasses=' + encodeURIComponent($('#Glasses').val()) +
            '&StaffPosition=' + encodeURIComponent($('#StaffPosition').val()) +
            '&Height=' + encodeURIComponent($('#Height').val()) +
            '&Weight=' + encodeURIComponent($('#Weight').val()) +
            '&EmployeeStatusID=' + encodeURIComponent($('#EmployeeStatusID').val())

        ;
    });

    @*function DeleteEmployee(id, caller) {

        var x = DeleteConfirm('@ViewBag.Action');
        if (x) {
            $.ajax({
                url: '@Url.Content("~/Employee/Employees/DeleteEmployee")',
                data: JSON.stringify({ 'Id': id }),
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    if (data == "success") {
                        if ($('#employeeTable>tbody tr').length == 1) {
                            $('#employeeTable').remove();
                            $('#msgDiv').html('<div class="alert alert-success">Employee has been deleted Suceesfully.</div>');
                            window.scrollTo(0, 0);
                        }
                        else {
                            $(caller).parents('tr:first').remove();
                            $('#msgDiv').html('<div class="alert alert-success">Employee has been deleted Suceesfully.</div>');
                            window.scrollTo(0, 0);
                        }
                    } else {

                    }

                }
            });
        }
    }*@
</script>
<style>
    .alphabet_group {
        display: none;
    }
</style>