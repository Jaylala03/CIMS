@model CIMS.Models.ManageSubjectLinkedModel
@{
    Layout = "~/Views/Shared/_InternalLayout.cshtml";
    ViewBag.Title = "Subject";
}

<div class="row bg-title">
    <div class="col-lg-3 col-md-4 col-sm-4 col-xs-12">
        <h4 class="page-title">Subject</h4>
    </div>
    <div class="col-lg-9 col-sm-8 col-md-8 col-xs-12">
        <ol class="breadcrumb">
            <li><a href='@Url.Content("~/Home/Index")'>Home</a></li>
            <li class="active">Subject</li>
        </ol>
    </div>

</div>

<div id="msgDiv">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }
</div>
<div class="row">
    @if (Model.subLinkedModel.SubjectID > 0)
    {
        <div class="col-md-12 enablebtn btn-enable-main">
            <h3 class="box-title inline-head">@Model.subLinkedModel.LogoFirstName @Model.subLinkedModel.LogoMiddleName @Model.subLinkedModel.LogoLastName</h3>

            <a href='@Url.Content("~/Subject/Subject/SubjectLinked?Type=Subject&Id=" + Model.subLinkedModel.SubjectID + "")' id="permission" class="btn btn-info edit" title="Edit Subject">
                <i class="fa fa-pencil"></i> Edit
            </a>
            <a class="btn btn-danger btndelete disableClick" href='javascript:;' onclick='DeleteSubject(@Model.subLinkedModel.SubjectID, this);' title="Delete Subject">
                <i class='fa fa-trash'></i> Delete
            </a>
            <a class="btn btn-primary btnaddrep" href='@Url.Content("~/Subject/Subject/SujectIncident?SubId=" + Model.subLinkedModel.SubjectID + "")' onclick="return checkReportPermission(this)" data-permission="@((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject Incident Details", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))">
                <i class="fa fa-plus"></i> Add Reports
            </a>
            <a class="btn btn-primary btnviewrep" href='@Url.Content("~/Subject/Subject/SubjectIncidentsList?SubId=" + Model.subLinkedModel.SubjectID + "")' onclick="return checkReportPermission(this)" data-permission="@((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject Incident Details", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))">
                <i class="fa fa-eye"></i> View Reports
            </a>
            <a class="btn btn-info" href='@Url.Content("~/Subject/Subject/SearchSubject/" + Model.subLinkedModel.SubjectID + "")'>
                <i class="fa fa-plus"></i>
                Combine Subject
            </a>
        </div>
    }
    <div class="col-md-12">
        <div class="white-box clearfix">
            <ul class="nav nav-pills custom-tabs">
                @if ((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))
                {
                    <li>
                        <a href='@Url.Content("~/Subject/Subject/AddSubject?"+(Request.QueryString["Show"]=="View"?"Show=View&":"")+"Type=Subject&Id="+Model.subLinkedModel.SubjectID+"")'>

                            <span>Subject</span>
                        </a>
                    </li>
                }
                @if ((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject Addresses", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))
                {
                    <li class="">
                        <a href='@Url.Content("~/Subject/Subject/SubjectAddress?"+(Request.QueryString["Show"]=="View"?"Show=View&":"")+"Type=Subject&Id="+Model.subLinkedModel.SubjectID+"")'>

                            <span>Addresses</span>
                        </a>
                    </li>
                }
                @if ((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject Aliases", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))
                {
                    <li class="">
                        <a href='@Url.Content("~/Subject/Subject/SubjectAlias?"+(Request.QueryString["Show"]=="View"?"Show=View&":"")+"Type=Subject&Id="+Model.subLinkedModel.SubjectID+"")'>
                            <span>Aliases</span>
                        </a>
                    </li>
                }
                @if ((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject Features", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))
                {
                    <li class="">
                        <a href='@Url.Content("~/Subject/Subject/SubjectFeatures?"+(Request.QueryString["Show"]=="View"?"Show=View&":"")+"Type=Subject&Id="+Model.subLinkedModel.SubjectID+"")'>
                            <span>Features</span>
                        </a>
                    </li>
                }
                @if ((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject Identification", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))
                {
                    <li class="">
                        <a href='@Url.Content("~/Subject/Subject/SubjectIdentification?"+(Request.QueryString["Show"]=="View"?"Show=View&":"")+"Type=Subject&Id="+Model.subLinkedModel.SubjectID+"")'>
                            <span>Identification</span>
                        </a>
                    </li>
                }
                @if ((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject LCT Totals", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))
                {
                    <li class="">
                        <a style="display:none;" href='@Url.Content("~/Subject/Subject/SubjectLCTTotals?" + (Request.QueryString["Show"] == "View" ? "Show=View&" : "") + "Type=Subject&Id=" + Model.subLinkedModel.SubjectID + "")'>
                            <span>LCT Totals</span>
                        </a>
                    </li>
                }
                @if ((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject Watch List", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))
                {
                    <li class="">
                        <a href='@Url.Content("~/Subject/Subject/SubjectWatchList?"+(Request.QueryString["Show"]=="View"?"Show=View&":"")+"Type=Subject&Id="+Model.subLinkedModel.SubjectID+"")'>
                            <span>Watch List</span>
                        </a>
                    </li>
                }
                @if ((Session["Admin"] == null ? CIMS.Models.CheckPermissions.permissionMenu("Subject Linked", Convert.ToInt32(Session["UserId"])) : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))
                {

                    <li class="active">
                        <a href="javascript:;">
                            <span>Linked</span>
                        </a>
                    </li>
                }
                @if ((Session["Admin"] == null ?
                                (CIMS.Models.CheckPermissions.permissionMenu("Subject Permission", Convert.ToInt32(Session["UserId"])) && Model.subLinkedModel.SubjectID > 0 && (Model.subLinkedModel.CreatedBy == Convert.ToInt32(Session["UserID"])))
                                : CIMS.Models.CheckAdminPermissions.permissionMenu("Subject")))
                {
                    <li class="">
                        <a href='@Url.Content("~/Subject/Subject/SubjectPermission?" + (Request.QueryString["Show"] == "View" ? "Show=View&" : "") + "Type=Subject&Id=" + Model.subLinkedModel.SubjectID + "")'>
                            <span>Permission</span>
                        </a>
                    </li>
                }
            </ul>
        </div>
        <div class="row">
            <input type="hidden" id="hdShow" name="hdShow" value='@(Request.QueryString["Show"])' />

            <div class="large-title">Subject Linked</div>

            @using (Html.BeginForm("SubjectLinked", "Subject", FormMethod.Post, new { enctype = "multipart/form-data", id = "SubjectLinked" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.subLinkedModel.SubjectID)
                @Html.HiddenFor(m => m.subLinkedModel.ID)
                @Html.HiddenFor(m => m.subLinkedModel.IncidentID)
                <input type="hidden" id="hdnFilePath" name="hdnFilePath" />

                <div class="col-md-6">
                    <div class="white-box clearfix">
                        <div class="form-group clearfix">
                            @Html.LabelFor(m => m.subLinkedModel.Description)
                            @Html.TextBoxFor(m => m.subLinkedModel.Description, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.subLinkedModel.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="white-box clearfix">
                        <div class="form-group clearfix">
                            @Html.LabelFor(m => m.subLinkedModel.FilePath)
                            @*@Html.TextBoxFor(m => m.subLinkedModel.FilePath, new {@type="file",@id="filePath",name="filePath"})*@
                            <input type="file" id="filePath" name="filePath" class="flubtn" />
                            <span style="color: red" id="spanUpload"></span>
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="white-box clearfix">
                        <div class="btn-right-align clearfix">
                            @*<input type="button" id="btnSubmit" value="@(Request.QueryString["Id"] != null ? "Update" : "Create")" class="btn btn-success" />*@
                            <input type="button" id="btnSubmit" value="Update" class="btn btn-success" />

                            <input type="button" class="btn btn-blue" id="clearBtn" value="Clear" />
                        </div>



                    </div>
                </div>

                <div class="col-md-12">

                </div>



            }
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">

        <div class="white-box clearfix">
            <div class="all-head1">
                <div class="large-title no-padding left">Subject Linked List</div>
                <div class="btn-right-align-right clearfix">
                    <a href="javascript:;" id="loadFile" class="btn btn-primary">Load File</a>
                </div>
            </div>
            <div class="full-box">
                @if (Model.subLinkedList != null && Model.subLinkedList.Count > 0)
                {
                    <div id="linkTable" class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>File Path</th>
                                    <th>Action</th>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var item in Model.subLinkedList)
                                {
                                    <tr>
                                        <td>
                                            <a href="@item.FilePath" download="@item.FilePath.Split('/').Last()" class="product-item">@item.FilePath</a>
                                        </td>
                                        <td><a href='javascript:;' data-id="@item.ID" class="btn small btn-info btn-sm btn-icon subjectTr"><i class='fa fa-pencil'></i></a><a href='javascript:;' class="btn small btn-danger btn-sm delete-sm" onclick='DeleteLink(@item.ID,this);'><i class='fa fa-trash'></i></a></td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div>No Record Found</div>
                }
            </div>
        </div>

    </div>
</div>


<script>
    $(document).ready(function ()
    {

        if ($('#hdShow').val() == 'View') {
            $(".form-control").attr("disabled", "disabled");
            $(".btn").hide(true);
            $(document).find('.enablebtn>a').removeAttr("style");
            $(".flubtn").attr("disabled", "disabled");
        }
        else {
            //$(".btn").removeAttr("style");
            $(".form-control").attr("disabled", false);
            //$(".btn").attr("disabled", false);
            $(document).find('#permission').hide(true);
        }


        $("a.product-item").click(function () {
            url_to_open = $(this).attr("href");
            window.open(url_to_open, '_blank');
            return false;
        });

        $('.subjectTr').on('click', function () {

            if (EditConfirm('@ViewBag.Action')) {
                var Id = $(this).attr('data-id');
                $.ajax({
                    url: '@Url.Content("~/Subject/Subject/GetSubjectLinkById")',
                    data: { Id: Id },
                    type: 'get',
                    datatype: 'json',
                    contenttype: 'application/json',
                    success: function (data) {
                        if (data.length > 0) {
                            var jsondata = JSON.parse(data);
                            $('#subLinkedModel_SubjectID').val(jsondata.SubjectID);
                            $('#subLinkedModel_ID').val(jsondata.ID);
                            $('#subLinkedModel_Description').val(jsondata.Description);
                            $('#hdnFilePath').val(jsondata.FilePath);
                            $('#btnSubmit').val('Update');
                            // $('#addressTitle').text('Update Subject Alias');
                        }

                    }
                });
            }
        });

        $('#clearBtn').on('click', function () {
            Reset();
        });

        $('#filePath').on('change', function (event) {
            var x;
            if (parseInt($('#subLinkedModel_ID').val()) > 0) {
                x = EditConfirm('@ViewBag.Action');
            }
            else {
                x = AddConfirm('@ViewBag.Action');
            }
            if (x) {
                $('#subLinkedModel_Description').val($(this).val());
                $('#hdnFilePath').val($(this).val());
            }
            else {
                $('#filePath').val('');
            }
        });

        $('#loadFile').on('click', function () {
            var downloadPath = $('#hdnFilePath').val();

            if (downloadPath != "") {
                window.open(downloadPath);
            }
        });

        $('#btnSubmit').on('click', function () {
            var x;
            if (parseInt($('#subLinkedModel_ID').val()) > 0) {
                x = EditConfirm('@ViewBag.Action');
            }
            else {
                x = AddConfirm('@ViewBag.Action');
            }
            if (x) {
                var uploadedfile = $('#hdnFilePath').val();
                if (uploadedfile != null && uploadedfile != "") {
                    $('form').submit();
                } else {
                    $('#spanUpload').text('Please Choose File.');
                }
            }
        });

        // Page Change
        var somethingChanged = false;
        var button = $('#btnSubmit');
        var orig = [];

        $.fn.getType = function () {
            return this[0].tagName == "INPUT" ? $(this[0]).attr("type").toLowerCase() : this[0].tagName.toLowerCase();
        }

        $("#SubjectLinked :input").each(function () {
            var type = $(this).getType();
            var tmp = {
                'type': type,
                'value': $(this).val()
            };
            if (type == 'radio') {
                tmp.checked = $(this).is(':checked');
            }
            orig[$(this).attr('id')] = tmp;
        });

        $('#SubjectLinked').bind('change keyup', function () {
            var disable = true;
            somethingChanged = false;
            $("#SubjectLinked :input").each(function () {
                var type = $(this).getType();
                var id = $(this).attr('id');

                if (type == 'text' || type == 'select') {
                    disable = (orig[id].value == $(this).val());
                } else if (type == 'radio') {
                    disable = (orig[id].checked == $(this).is(':checked'));
                }

                if (!disable) {
                    return false; // break out of loop

                }
            });
            somethingChanged = true;
            button.prop('disabled', disable);
        }); // End Page Change

        // save change script
        $('#myTab > li > a ').click(function (e) {
            if ($('#hdShow').val() != 'View') {
                if (somethingChanged == true) {
                    formSubmitByTab(somethingChanged);
                    somethingChanged = false;
                    return false;
                }
            }
        });
        // end save change script
        if ('@Model.subLinkedModel.EditPermission' == 'False') {
            $(".form-control").attr("disabled", "disabled");
            //$(".btn").hide(true);
            $(".btn").attr("disabled", "disabled");
            $(".flubtn").attr("disabled", "disabled");
            $(document).find("input[type=checkbox]").attr("disabled", "disabled");
            $(document).find("input[type=radio]").attr("disabled", "disabled");
        }
        $(".btnaddrep").removeAttr("disabled");
        $(".btnviewrep").removeAttr("disabled");

        if ('@Model.subLinkedModel.DeletePermission' == 'True') {
            $(".btndelete").removeClass("disableClick");
        }
    }); // End

    function DeleteLink(id, caller) {
        if (DeleteConfirm('@ViewBag.Action')) {
            $.ajax({
                url: '@Url.Content("~/Subject/Subject/DeleteSubjectLinked")',
                data: JSON.stringify({ 'Id': id }),
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    if (data == "success") {
                        if ($('#linkTable>tbody tr').length == 1) {
                            $('#linkTable').remove();
                            $('#msgDiv').html('<div class="alert alert-success">Subject Linked Deleted Suceesfully.</div>');
                            window.scrollTo(0, 0);
                        }
                        else {
                            $(caller).parents('tr:first').remove();
                            $('#msgDiv').html('<div class="alert alert-success">Subject Linked Deleted Suceesfully.</div>');
                            window.scrollTo(0, 0);
                        }
                    } else {

                    }

                }
            });
        }
    }

    function DeleteSubject(id, caller) {
        if (DeleteConfirm('@ViewBag.Action')) {
            $.ajax({
                url: '@Url.Content("~/Subject/Subject/DeleteSubject")',
                data: JSON.stringify({ 'Id': id }),
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json',
                success: function (data) {
                    if (data == "success") {
                        $('#msgDiv').html('<div class="alert alert-success">Subject has been deleted Suceesfully.</div>');
                        setTimeout(function () {
                            $('#msgDiv').fadeOut();
                        }, 5000);
                        window.scrollTo(0, 0);
                        location.replace('@Url.Content("~/Subject/Subject/Index")');
                    } else {

                    }

                }
            });
        }
    }

    function Reset() {
        $('#filePath').val('');
        $('#subLinkedModel_Description').val('');
        $('#hdnFilePath').val('');
        $('#subLinkedModel_ID').val('');
        //$('#btnSubmit').val('Create');
    }
    $("#permission").click(function () {
        if (EditConfirm('@ViewBag.Action')) {
            return true;
        }
        else {

            return false;
        }
    });

    // Submit form on tab change Script
    function formSubmitByTab(valueChanged) {
        if (valueChanged == true) {
            var r = confirm("Do you want to save changes?");
            if (r == true) {
                $('#btnSubmit').click();
            }
        }

    }// End Submit form on tab change Script
</script>
